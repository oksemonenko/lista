# REWRITE
<IfModule mod_rewrite.c>
	RewriteEngine On
	RewriteBase /

	#	Перенаправлять любой запрос с www.* на *
	RewriteCond %{HTTP_HOST} ^www\.(.*) [NC]
	RewriteRule ^(.*)$ http://%1/$1 [R=301,L]

	#	Убираем повторяющиеся слеши в начале URL
	RewriteCond %{THE_REQUEST} ^[A-Z]{3,9}\ /{2,}
	RewriteRule ^(.*) /$1 [R=301,L]
	#	Убираем повторяющиеся слеши в середине URL
	RewriteCond %{REQUEST_URI} ^(.*)/{2,}(.*)$ [NC]
	RewriteRule .* %1/%2 [R=301,L]

	#	Перенаправляем с индексного файла на /
	RewriteRule ^index.php$ / [R=301,L]



	#	Блокировать любой запрос, содержащий тег <script> в URL
#	RewriteCond %{QUERY_STRING} (<|%3C)([^s]*s)+cript.*(>|%3E) [NC,OR]
	#	Блокировать любой запрос, пытающийся установить значение глобальных переменных PHP через URL
#	RewriteCond %{QUERY_STRING} GLOBALS(=|\[|\%[0-9A-Z]{0,2}) [OR]
	#	Блокировать любой запрос, пытающийся изменить _REQUEST переменную через URL
#	RewriteCond %{QUERY_STRING} _REQUEST(=|\[|\%[0-9A-Z]{0,2})
	#	Перенаправлять заблокированные запросы
#	RewriteRule .* / [F]
	#	Запретить все запросы, кроме необходимых. Только хардкор!
	RewriteCond %{QUERY_STRING} ^.+$
	RewriteCond %{QUERY_STRING} !^.*(openstat|utl|utm).*$
	RewriteRule ^(.*)$ http://%{HTTP_HOST}/$1? [R=301,L]


	# HOTLINKING
#	RewriteCond %{HTTP_REFERER} !^$
#	RewriteCond %{HTTP_REFERER} !^http://di-k(\.ru)? [NC]
#	RewriteRule \.(gif|jpe?g|png)$ - [F,NC,L]

	#	Перенаправлять любой запрос на существующий файл на название файла без расширения
	RewriteCond %{ENV:REDIRECT_STATUS} ^$
	RewriteCond %{REQUEST_FILENAME} -f
	RewriteRule ^(about/[^/]+)\.php$ $1 [L,R=301]
	#	Перенаправлять содержание страницы на название файла с расширением (без изменения URL)
	RewriteCond %{ENV:REDIRECT_STATUS} ^$
	RewriteCond %{DOCUMENT_ROOT}/$1.php -f
	RewriteRule ^(about/[^/]+)$ $1.php [L]
</IfModule>

# HANDLER
AddHandler application/x-httpd-php .php .htm .html

# INDEX FILE
DirectoryIndex index.html index.php

# DEFAULT CHARSET
AddDefaultCharset UTF-8

# GZIP
<IfModule mod_gzip.c>
	mod_gzip_on         Yes
	mod_gzip_dechunk    Yes
	mod_gzip_item_include file		\.(html|txt|css|js|php)$
	mod_gzip_item_include mime		^text\.*
	mod_gzip_item_include mime		^application/x-javascript.*
	mod_gzip_item_exclude mime		^image\.*
	mod_gzip_item_exclude rspheader	^Content-Encoding:.*gzip.*
</IfModule>
<ifModule mod_deflate.c>
	<FilesMatch "\.(css|js|html|php|xml)$">
		SetOutputFilter DEFLATE
	</FilesMatch>
#AddOutputFilterByType DEFLATE text/html text/plain text/xml application/xml application/xhtml+xml text/css text/javascript application/javascript application/x-javascript
BrowserMatch ^Mozilla/4 gzip-only-text/html
BrowserMatch ^Mozilla/4.0[678] no-gzip
BrowserMatch bMSIE !no-gzip !gzip-only-text/html
</ifModule>
#php_flag zlib.output_compression On
#php_value zlib.output_compression_level 9

# CACHE AND Headers
	#	Оказывается это равносильные вещи.
	#	FileETag MTime Size
<IfModule mod_expires.c>
	ExpiresActive on
	<FilesMatch "\.(jpe?g|gif|png|ico)$">
		ExpiresDefault "access plus 7 days"
	</FilesMatch>
	<FilesMatch "\.(css|js)$">
		ExpiresDefault "access plus 7 days"
	</FilesMatch>
	<FilesMatch "\.(html|php)$">
		ExpiresDefault "access plus 7 days"
	</FilesMatch>
</IfModule>
<IfModule mod_headers.c>
	<FilesMatch "\.(ico|jpe?g|png|gif)$">
		Header set Cache-Control "max-age=604800, private"
	</FilesMatch>
	<FilesMatch "\.(css|js)$">
		Header set Cache-Control "max-age=604800, private"
	</FilesMatch>
	<FilesMatch "\.(html|php)$">
		Header set Cache-Control "max-age=604800, private"
	</FilesMatch>
#	Отключить заголовок Last-Modified. Браузер будет ориентироваться только на Cache-Control и Expires
#	<FilesMatch "\.(ico|jpe?g|png|gif|js|css)$">
#		Header unset Last-Modified
#	</FilesMatch>
</IfModule>

#  ERROR Pages
ErrorDocument 404 /err404.html
ErrorDocument 403 /err404.html

#13.12.2015
Redirect 301 /foo.php /bar.php
